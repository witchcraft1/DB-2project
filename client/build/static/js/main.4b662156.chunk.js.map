{"version":3,"sources":["store/actions/index.js","store/actions/types.js","components/Navbar.js","components/Login.js","components/UserTable.js","components/AddUser.js","components/DeleteUser.js","components/DeleteExec.js","components/CheckUser.js","components/UserMng.js","components/TaskTable.js","components/AddTask.js","components/SetTaskState.js","components/SetTask.js","components/CheckTask.js","components/TaskMng.js","components/StateTable.js","App.js","store/reducers/active.js","store/reducers/index.js","serviceWorker.js","index.js"],"names":["fetchUserTable","dispatch","axios","get","then","res","type","payload","data","fetchTaskTable","Navbar","handleItemClick","e","_ref","content","_this","props","logged","setState","activeItem","changeActiveItem","this","react_default","a","createElement","Menu","horizontal","Item","header","Header","Subheader","fluid","onClick","as","active","Component","connect","state","obj","Login","Segment","placeholder","style","paddingTop","icon","Icon","name","Form","unstackable","Group","display","justifyContent","padding","widths","Input","label","Button","marginBottom","secondary","logIn","UserTable","str","handleChange","value","_this2","tmp","userTable","filter","el","toLowerCase","indexOf","onChange","Table","celled","Row","HeaderCell","Body","map","key","id","Cell","tasks","comm","toString","worbef","skills","knowledge","createdAt","AddUser","options","text","char","done","handleSelect","_ref2","handleSubmit","length","addUser","Label","margin","size","color","marginTop","Tab","Pane","alignItems","required","Select","renderDone","post","DeleteUser","user","deleteUser","msg","userid","delete","concat","DeleteExec","task","deleteExec","username","taskname","handleChangeUser","handleChangeTask","taskTable","users","includes","console","log","SetTask","handleSelectUser","renderTask","List","divided","relaxed","find","verticalAlign","Content","Description","elem","updatedAt","UserMng","panes","menuItem","render","components_AddUser","components_DeleteUser","CheckUser","components_DeleteExec","TaskTable","AddTask","addTask","stateTable","handleSelectTask","handleSelectState","setTaskState","setTask","TaskMng","components_AddTask","SetTaskState","CheckTask","components_SetTask","StateTable","fetchStateTable","structured","action","managed","App","_this$props","components_Login","components_UserTable","components_StateTable","components_TaskTable","components_UserMng","components_TaskMng","className","components_Navbar","renderBody","initialState","combineReducers","arguments","undefined","Object","objectSpread","Boolean","window","location","hostname","match","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","run","ReactDOM","es","src_App_0","document","getElementById","subscribe","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4b662156.chunk.js","sourcesContent":["import { DELETE_EXEC, SET_TASK, CHANGE_ACTIVE_ITEM, LOG_IN, FETCH_USER_TABLE, FETCH_TASK_TABLE, FETCH_STATE_TABLE, ADD_USER, DELETE_USER, ADD_TASK, SET_TASK_STATE } from './types';\r\nimport axios from 'axios';\r\n\r\nexport const changeActiveItem = obj => dispatch => {\r\n    dispatch({ type: CHANGE_ACTIVE_ITEM, payload: obj });\r\n};\r\n\r\nexport const logIn = () => dispatch => {\r\n    dispatch({ type: LOG_IN, payload: null });\r\n};\r\n\r\nexport const fetchUserTable = () => dispatch => {\r\n    axios\r\n        .get('/users/')\r\n        .then(res => dispatch({\r\n            type: FETCH_USER_TABLE,\r\n            payload: res.data\r\n        }))\r\n};\r\n\r\nexport const fetchTaskTable = () => dispatch => {\r\n    axios\r\n        .get(`/tasks/`)\r\n        .then(res => dispatch({\r\n            type: FETCH_TASK_TABLE,\r\n            payload: res.data\r\n        }))\r\n};\r\n\r\nexport const fetchStateTable = () => dispatch => {\r\n    axios\r\n        .get('/tasks/state/')\r\n        .then(res => dispatch({\r\n            type: FETCH_STATE_TABLE,\r\n            payload: res.data\r\n        }))\r\n};\r\n\r\nexport const addUser = obj => dispatch => {\r\n    axios\r\n        .post('/users/add', obj)\r\n        .then(res => dispatch({\r\n            type: ADD_USER,\r\n            payload: res\r\n        }))\r\n};\r\n\r\nexport const deleteUser = userid => dispatch => {\r\n    axios\r\n        .delete(`/users/delete/${userid}`)\r\n        .then(res => dispatch({\r\n            type: DELETE_USER,\r\n            payload: res.data\r\n        }))\r\n};\r\n\r\nexport const deleteExec = obj => dispatch => {\r\n    console.log(obj);\r\n    axios\r\n        .delete(`/tasks/delete-user/${obj.username}/${obj.taskname}`)\r\n        .then(res => dispatch({\r\n            type: DELETE_EXEC,\r\n            payload: res.data\r\n        }))\r\n};\r\n\r\nexport const setTask = obj => dispatch => {\r\n    axios\r\n        .post('/tasks/add-user/', obj)\r\n        .then(res => dispatch({\r\n            type: SET_TASK,\r\n            payload: res\r\n        }))\r\n};\r\n\r\nexport const setTaskState = obj => dispatch => {\r\n    axios\r\n        .post('/tasks/state/', obj)\r\n        .then(res => dispatch({\r\n            type: SET_TASK_STATE,\r\n            payload: res\r\n        }))\r\n};\r\n\r\nexport const addTask = obj => dispatch => {\r\n    axios\r\n        .post('/tasks/add/', obj)\r\n        .then(res => dispatch({\r\n            type: ADD_TASK,\r\n            payload: res\r\n        }))\r\n};","export const CHANGE_ACTIVE_ITEM = 'CHANGE_ACTIVE_ITEM';\r\nexport const LOG_IN = 'LOG_IN';\r\nexport const FETCH_USER_TABLE = 'FETCH_USER_TABLE';\r\nexport const FETCH_TASK_TABLE = 'FETCH_TASK_TABLE';\r\nexport const ADD_USER = 'ADD_USER';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const DELETE_EXEC = 'DELETE_EXEC';\r\nexport const SET_TASK = 'SET_TASK';\r\nexport const ADD_TASK = 'ADD_TASK';\r\nexport const SET_TASK_STATE = 'SET_TASK_STATE';\r\nexport const FETCH_STATE_TABLE = 'FETCH_STATE_TABLE';","import React, { Component } from 'react';\r\nimport { Menu, Header } from 'semantic-ui-react';\r\nimport '../App.css';\r\nimport { connect } from 'react-redux';\r\nimport { changeActiveItem } from '../store/actions/';\r\n\r\nclass Navbar extends Component {\r\n    handleItemClick = (e, { content }) => {\r\n        if (this.props.logged) {\r\n            this.setState({ activeItem: content });\r\n            this.props.changeActiveItem(content);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { activeItem } = this.props;\r\n\r\n        return (\r\n            <div>\r\n                <Menu horizontal='true'>\r\n                    <Menu.Item header>\r\n                        <Header>\r\n                            Business processes\r\n                            <Header.Subheader>Databases-1</Header.Subheader>\r\n                        </Header>\r\n                    </Menu.Item>\r\n                    <Menu.Item>\r\n                        <Menu fluid>\r\n                            <Menu.Item onClick={this.handleItemClick} as='a'\r\n                                content='User Table' active={activeItem === 'User Table'}>\r\n                            </Menu.Item>\r\n                            <Menu.Item onClick={this.handleItemClick} as='a'\r\n                                content='Task Table' active={activeItem === 'Task Table'}>\r\n                            </Menu.Item>\r\n                            <Menu.Item onClick={this.handleItemClick} as='a'\r\n                                content='State Table' active={activeItem === 'State Table'}>\r\n                            </Menu.Item>\r\n                            <Menu.Item onClick={this.handleItemClick} as='a'\r\n                                content='User Management' active={activeItem === 'User Management'}>\r\n                            </Menu.Item>\r\n                            <Menu.Item onClick={this.handleItemClick} as='a'\r\n                                content='Task Management' active={activeItem === 'Task Management'}>\r\n                            </Menu.Item>\r\n                        </Menu>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        activeItem: state.active.activeItem,\r\n        logged: state.active.logged\r\n    }),\r\n    { changeActiveItem }\r\n)(Navbar);","import React, { Component } from 'react';\r\nimport { logIn } from '../store/actions/';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Header, Icon, Segment, Form } from 'semantic-ui-react';\r\n\r\nclass Login extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Segment placeholder>\r\n                    <Header style={{paddingTop: '20px'}} icon>\r\n                        <Icon name='lock' />\r\n                        Log into the database\r\n                    </Header>\r\n                    <Form unstackable>\r\n                        <Form.Group style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            padding: '20px'\r\n                        }}\r\n                            widths={2}>\r\n                            <Form.Input label='Your name' placeholder='Your name' />\r\n                            <Form.Input label='Password' placeholder='Password' />\r\n                        </Form.Group>\r\n                        <Button style={{marginBottom: '20px'}} secondary onClick={this.props.logIn}>Log In</Button>\r\n                    </Form>\r\n                </Segment>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default connect(\r\n    null,\r\n    { logIn }\r\n)(Login);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Table, Input } from 'semantic-ui-react';\r\nimport { fetchUserTable } from '../store/actions/'\r\n\r\nclass UserTable extends Component {\r\n  state = {\r\n    str: ''\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchUserTable();\r\n  }\r\n  handleChange = (e, { value }) => {\r\n    this.setState({ str: value });\r\n  }\r\n  render() {\r\n    let tmp = this.props.userTable;\r\n    if (this.state.str) tmp = this.props.userTable.filter(el => el.name.toLowerCase().indexOf(this.state.str.toLowerCase()) > -1);\r\n    return (\r\n      <div>\r\n        <Input fluid onChange={this.handleChange} label='Enter user name'></Input>\r\n        <Table celled>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>Id</Table.HeaderCell>\r\n              <Table.HeaderCell>Name</Table.HeaderCell>\r\n              <Table.HeaderCell>Tasks</Table.HeaderCell>\r\n              <Table.HeaderCell>Communicative</Table.HeaderCell>\r\n              <Table.HeaderCell>Worked before</Table.HeaderCell>\r\n              <Table.HeaderCell>Skills</Table.HeaderCell>\r\n              <Table.HeaderCell>Knowledge</Table.HeaderCell>\r\n              <Table.HeaderCell>Created Date</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>\r\n            {tmp.map(key =>\r\n              <Table.Row key={key.id}>\r\n                <Table.Cell>{key.id}</Table.Cell>\r\n                <Table.Cell>{key.name}</Table.Cell>\r\n                <Table.Cell>{key.tasks.map((el, id) => <div key={id}>{el}</div>)}</Table.Cell>\r\n                <Table.Cell>{key.comm.toString()}</Table.Cell>\r\n                <Table.Cell>{key.worbef.toString()}</Table.Cell>\r\n                <Table.Cell>{key.skills.toString()}</Table.Cell>\r\n                <Table.Cell>{key.knowledge.toString()}</Table.Cell>\r\n                <Table.Cell>{key.createdAt}</Table.Cell>\r\n              </Table.Row>\r\n            )}\r\n          </Table.Body>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    userTable: state.active.userTable\r\n  }),\r\n  { fetchUserTable }\r\n)(UserTable);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addUser } from '../store/actions/';\r\nimport { Tab, Form, Label, Header } from 'semantic-ui-react';\r\n\r\nclass AddUser extends Component {\r\n    state = {\r\n        options: [{text: 'Yes', value: true}, {text: 'No', value: false}],\r\n        name: '',\r\n        char: [],\r\n        done: false\r\n    }\r\n    handleChange = (e, { value }) => {\r\n        this.setState({ name: value });\r\n    }\r\n    handleSelect = (e, { value, id }) => {\r\n        let tmp = this.state.char;\r\n        tmp[id] = value;\r\n        this.setState({ char: tmp });\r\n    }\r\n    handleSubmit = e => {\r\n        if (this.state.name && this.state.char.length === 4) {\r\n            let tmp = {\r\n                name: this.state.name,\r\n                char: this.state.char\r\n            };\r\n            this.props.addUser(tmp);\r\n            this.setState({ done: true });\r\n        }\r\n    }\r\n    renderDone() {\r\n        if (this.state.done) {\r\n            return (\r\n                <Label style={{margin: '20px'}} size='big' color='green'>\r\n                    Done!\r\n                    <Header style={{marginTop: '10px'}} as='h5'>Now check the table or refresh to continue</Header>\r\n                </Label>\r\n            )\r\n        }\r\n    }\r\n    render() { \r\n        return (\r\n            <Tab.Pane>\r\n                <Form unstackable>\r\n                    <Form.Group style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'center',\r\n                        alignItems: 'center',\r\n                        padding: '20px'\r\n                    }} widths={2}>\r\n                        <Form.Input required onChange={this.handleChange} label='Name' placeholder='Name'/>\r\n                        <Form.Select required options={this.state.options} label='Communicative'\r\n                            onChange={this.handleSelect} id={0} \r\n                        />\r\n                        <Form.Select required options={this.state.options} label='Worked before'\r\n                            onChange={this.handleSelect} id={1}\r\n                        />\r\n                        <Form.Select required options={this.state.options} label='Skillful'\r\n                            onChange={this.handleSelect} id={2}\r\n                        />\r\n                        <Form.Select required options={this.state.options} label='Certified'\r\n                            onChange={this.handleSelect} id={3}\r\n                        />\r\n                        <Form.Button style={{\r\n                            marginTop: '22px'\r\n                        }} secondary onClick={this.handleSubmit}>Submit</Form.Button>\r\n                    </Form.Group>\r\n                </Form>\r\n                <div>{this.renderDone()}</div>                \r\n            </Tab.Pane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    { addUser }\r\n)(AddUser);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { deleteUser, fetchUserTable } from '../store/actions/';\r\nimport { Tab, Form, Label, Header } from 'semantic-ui-react';\r\n\r\nclass DeleteUser extends Component {\r\n  state = {\r\n    done: false\r\n  }\r\n  componentDidMount() {\r\n    this.props.fetchUserTable();\r\n    this.setState({ done: false })\r\n  }\r\n  handleSubmit = e => {\r\n    if (this.state.user) {\r\n      this.props.deleteUser(this.state.user);\r\n      this.setState({ done: true });\r\n    }\r\n  }\r\n  handleChange = (e, { value }) => this.setState({ user: value });\r\n  renderDone = () => {\r\n    if (this.props.msg && this.state.done)\r\n      return this.props.msg === 'done' ?\r\n        <Label style={{ margin: '20px' }} size='big' color='green'>\r\n          Done!\r\n          <Header style={{ marginTop: '10px' }} as='h5'>Now check the table or refresh to continue</Header>\r\n        </Label> :\r\n        <Label style={{ margin: '20px' }} size='big' color='red'>\r\n          Some issue has occured!\r\n          <Header style={{ marginTop: '10px' }} as='h5'>{this.props.msg.msg}</Header>\r\n        </Label>\r\n  }\r\n  render() {\r\n    return (\r\n      <Tab.Pane>\r\n        <Form unstackable>\r\n          <Form.Group style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            padding: '20px'\r\n          }} widths={2}>\r\n            <Form.Select required options={\r\n              this.props.userTable.map(key => ({ text: key.name, value: key.name }))\r\n            } label='Choose a user you want to delete' onChange={this.handleChange} />\r\n            <Form.Button style={{\r\n              marginTop: '22px'\r\n            }} secondary onClick={this.handleSubmit}>Submit</Form.Button>\r\n          </Form.Group>\r\n        </Form>\r\n        <div>{this.renderDone()}</div>\r\n      </Tab.Pane>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    userTable: state.active.userTable,\r\n    msg: state.active.msg\r\n  }),\r\n  { fetchUserTable, deleteUser }\r\n)(DeleteUser);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchTaskTable, fetchUserTable, deleteExec } from '../store/actions/';\r\nimport { Tab, Form, Label, Header } from 'semantic-ui-react';\r\n\r\nclass DeleteExec extends Component {\r\n  componentWillMount() {\r\n    this.props.fetchUserTable();\r\n    this.props.fetchTaskTable();\r\n    this.setState({ done: false })\r\n  }\r\n  handleSubmit = e => {\r\n    if (this.state.user && this.state.task) {\r\n      this.props.deleteExec({\r\n        username: this.state.user,\r\n        taskname: this.state.task\r\n      });\r\n      this.setState({ done: true });\r\n    }\r\n  }\r\n  handleChangeUser = (e, { value }) => this.setState({ user: value });\r\n  handleChangeTask = (e, { value }) => this.setState({ task: value });\r\n  renderDone = () => {\r\n    if (this.state.done)\r\n      return this.props.msg.msg === 'done' ?\r\n        <Label style={{ margin: '20px' }} size='big' color='green'>\r\n          Done!\r\n          <Header style={{ marginTop: '10px' }} as='h5'>Now check the table or refresh to continue</Header>\r\n        </Label> :\r\n        <Label style={{ margin: '20px' }} size='big' color='red'>\r\n          Some issue has occured!\r\n          <Header style={{ marginTop: '10px' }} as='h5'>{this.props.msg.msg}</Header>\r\n        </Label>\r\n  }\r\n  render() {\r\n    return (\r\n      <Tab.Pane>\r\n        <Form unstackable>\r\n          <Form.Group style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            padding: '20px'\r\n          }} widths={2}>\r\n            <Form.Select required options={\r\n              this.props.userTable.map(key => ({ text: key.name, value: key.name }))\r\n            } label='Choose a user' onChange={this.handleChangeUser} />\r\n            <Form.Select required options={\r\n              this.props.taskTable\r\n                .filter(el => el.users.includes(this.state.user))\r\n                .map(key => ({ text: key.name, value: key.name }))\r\n            } label='Choose a task' onChange={this.handleChangeTask} />\r\n            <Form.Button style={{\r\n              marginTop: '22px'\r\n            }} secondary onClick={this.handleSubmit}>Submit</Form.Button>\r\n          </Form.Group>\r\n        </Form>\r\n        <div>{this.renderDone()}</div>\r\n      </Tab.Pane>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    userTable: state.active.userTable,\r\n    taskTable: state.active.taskTable,\r\n    msg: state.active.msg\r\n  }),\r\n  { fetchUserTable, fetchTaskTable, deleteExec }\r\n)(DeleteExec);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchUserTable, fetchTaskTable } from '../store/actions/';\r\nimport { Tab, Form, List } from 'semantic-ui-react';\r\n\r\nclass SetTask extends Component {\r\n  handleSelectUser = (e, { value }) => this.setState({ task: value });\r\n  componentDidMount() {\r\n    this.props.fetchUserTable();\r\n    this.props.fetchTaskTable();\r\n  }\r\n  renderTask = () => {\r\n    if (this.state)\r\n      return (\r\n        <List divided relaxed style={{ padding: '20px' }} >\r\n          {\r\n            this.props.userTable.find(el => el.name === this.state.task).tasks.map((el, id) => (\r\n              <List.Item key={id}>\r\n                <List.Icon name='wheelchair' size='large' verticalAlign='middle' />\r\n                <List.Content>\r\n                  <List.Header>{el}</List.Header>\r\n                  <List.Description>{this.props.taskTable.find(elem => elem.name === el).state}</List.Description>\r\n                  <List.Description>{this.props.taskTable.find(elem => elem.name === el).updatedAt}</List.Description>\r\n                </List.Content>\r\n              </List.Item>\r\n            ))\r\n          }\r\n        </ List>\r\n      )\r\n  }\r\n  render() {\r\n    return (\r\n      <Tab.Pane>\r\n        <Form unstackable>\r\n          <Form.Group style={{\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            padding: '20px'\r\n          }} widths={2}>\r\n            <Form.Select options={\r\n              this.props.userTable.map(key => ({ text: key.name, value: key.name, key: key.id }))\r\n            } required label='Select a user' onChange={this.handleSelectUser} />\r\n          </Form.Group>\r\n        </Form>\r\n        {this.renderTask()}\r\n      </Tab.Pane>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    userTable: state.active.userTable,\r\n    taskTable: state.active.taskTable\r\n  }),\r\n  { fetchUserTable, fetchTaskTable }\r\n)(SetTask);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AddUser from './AddUser';\r\nimport DeleteUser from './DeleteUser';\r\nimport DeleteExec from './DeleteExec';\r\nimport CheckUser from './CheckUser';\r\nimport { Tab } from 'semantic-ui-react';\r\n\r\nclass UserMng extends Component {\r\n    state = {\r\n        panes: [\r\n            { menuItem: 'Add new user to database', render: () => <AddUser /> },\r\n            { menuItem: 'Delete user from database', render: () => <DeleteUser /> },\r\n            { menuItem: 'Check user\\'s tasks', render: () => <CheckUser /> },\r\n            { menuItem: 'Delete an executor from a task', render: () => <DeleteExec /> }\r\n        ]\r\n    }\r\n    render() {\r\n        return (\r\n            <Tab panes={this.state.panes} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    null\r\n)(UserMng);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Table, Input } from 'semantic-ui-react';\r\nimport { fetchTaskTable } from '../store/actions/'\r\n\r\nclass TaskTable extends Component {\r\n  state = {\r\n    str: ''\r\n  }\r\n  componentWillMount() {\r\n    this.props.fetchTaskTable();\r\n  }\r\n  handleChange = (e, { value }) => {\r\n    this.setState({ str: value });\r\n  }\r\n  render() {\r\n    let tmp = this.props.taskTable;\r\n    if (this.state.str) tmp = this.props.taskTable.filter(el => el.name.toLowerCase().indexOf(this.state.str.toLowerCase()) > -1);\r\n    return (\r\n      <div>\r\n        <Input fluid onChange={this.handleChange} label='Enter task name'></Input>\r\n        <Table celled>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>Id</Table.HeaderCell>\r\n              <Table.HeaderCell>Name</Table.HeaderCell>\r\n              <Table.HeaderCell>Users</Table.HeaderCell>\r\n              <Table.HeaderCell>State</Table.HeaderCell>\r\n              <Table.HeaderCell>Creation date</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n          <Table.Body>\r\n            {tmp.map(key =>\r\n              <Table.Row key={key.id}>\r\n                <Table.Cell>{key.id}</Table.Cell>\r\n                <Table.Cell>{key.name}</Table.Cell>\r\n                <Table.Cell>\r\n                  <Table >\r\n                    <Table.Body>\r\n                      <Table.Row>{key.users.map((el, id) => <Table.Cell key={id}>{el}</Table.Cell>)}</Table.Row>\r\n                    </Table.Body>\r\n                  </Table>\r\n                </Table.Cell>\r\n                <Table.Cell>{key.state}</Table.Cell>\r\n                <Table.Cell>{key.createdAt}</Table.Cell>\r\n              </Table.Row>\r\n            )}\r\n          </Table.Body>\r\n        </Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({\r\n    taskTable: state.active.taskTable\r\n  }),\r\n  { fetchTaskTable }\r\n)(TaskTable);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addTask } from '../store/actions/';\nimport { Tab, Form, Label, Header } from 'semantic-ui-react';\n\nclass AddTask extends Component {\n  state = {\n    name: '',\n    done: false\n  }\n  handleChange = (e, { value }) => this.setState({ name: value });\n  handleSubmit = e => {\n    if (this.state.name) {\n      this.props.addTask({ name: this.state.name });\n      this.setState({ done: true });\n    }\n  }\n  renderDone() {\n    if (this.state.done) {\n      return (\n        <Label style={{ margin: '20px' }} size='big' color='green'>\n          Done!\n          <Header style={{ marginTop: '10px' }} as='h5'>Now check the table or refresh to continue</Header>\n        </Label>\n      )\n    }\n  }\n  render() {\n    return (\n      <Tab.Pane>\n        <Form unstackable>\n          <Form.Group style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            padding: '20px'\n          }} widths={2}>\n            <Form.Input required onChange={this.handleChange} label='Name' placeholder='Name' />\n            <Form.Button style={{\n              marginTop: '22px'\n            }} secondary onClick={this.handleSubmit}>Submit</Form.Button>\n          </Form.Group>\n        </Form>\n        <div>{this.renderDone()}</div>\n      </Tab.Pane>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { addTask }\n)(AddTask);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTaskTable, setTaskState } from '../store/actions/';\nimport { Tab, Form, Label, Header } from 'semantic-ui-react';\n\nclass SetTask extends Component {\n  state = {\n    taskname: 0,\n    done: false,\n    stateTable: [\"working on\", \"almost done\", \"pending admin check\", \"done\"]\n  }\n  handleSelectTask = (e, { value }) => {\n    this.setState({ taskname: value });\n  }\n  handleSelectState = (e, { value }) => this.setState({ state: value });\n  handleSubmit = e => {\n    if (this.state.taskname && this.state.state) {\n      this.props.setTaskState({\n        taskname: this.state.taskname,\n        state: this.state.state\n      })\n      this.setState({ done: true });\n    }\n  }\n  componentDidMount() {\n    this.props.fetchTaskTable();\n  }\n  renderDone() {\n    if (this.state.done) {\n      return (\n        <Label style={{ margin: '20px' }} size='big' color='green'>\n          Done!\n          <Header style={{ marginTop: '10px' }} as='h5'>Now check the table or refresh to continue</Header>\n        </Label>\n      )\n    }\n  }\n  render() {\n    return (\n      <Tab.Pane>\n        <Form unstackable>\n          <Form.Group style={{\n            display: 'flex',\n            alignItems: 'center',\n            padding: '20px'\n          }} widths={2}>\n            <Form.Select options={\n              this.props.taskTable.map(key => ({ text: key.name, value: key.name }))\n            } required label='Select a task' onChange={this.handleSelectTask} />\n            <Form.Input onChange={this.handleSelectState} required placeholder='State' label='State' />\n            <Form.Button secondary style={{\n              marginTop: '22px'\n            }} onClick={this.handleSubmit}>Submit</Form.Button>\n          </Form.Group>\n        </Form>\n        <div>{this.renderDone()}</div>\n      </Tab.Pane>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    taskTable: state.active.taskTable\n  }),\n  { fetchTaskTable, setTaskState }\n)(SetTask);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setTask, fetchTaskTable, fetchUserTable } from '../store/actions/';\r\nimport { Tab, Form, Label, Header } from 'semantic-ui-react';\r\n\r\nclass SetTask extends Component {\r\n    state = {\r\n        username: 0,\r\n        taskname: 0,\r\n        done: false\r\n    }\r\n    handleSelectUser = (e, { value }) => {\r\n        this.setState({ username: value });\r\n    }\r\n    handleSelectTask = (e, { value }) => {\r\n        this.setState({ taskname: value });\r\n    }\r\n    handleSubmit = e => {\r\n        if (this.state.username && this.state.taskname) {\r\n            this.props.setTask({\r\n                username: this.state.username,\r\n                taskname: this.state.taskname\r\n            });\r\n            this.setState({ done: true });\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        this.props.fetchTaskTable();\r\n        this.props.fetchUserTable();\r\n    }\r\n    renderDone() {\r\n        if (this.state.done) {\r\n            return (\r\n                <Label style={{ margin: '20px' }} size='big' color='green'>\r\n                    Done!\r\n                    <Header style={{ marginTop: '10px' }} as='h5'>\r\n                        Now check the table or refresh to continue\r\n                    </Header>\r\n                </Label>\r\n            )\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Tab.Pane>\r\n                <Form unstackable>\r\n                    <Form.Group style={{\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        padding: '20px'\r\n                    }} widths={2}>\r\n                        <Form.Select options={\r\n                            this.props.userTable.map(key => ({ text: key.name, value: key.name }))\r\n                        } required label='Select a user' onChange={this.handleSelectUser} />\r\n                        <Form.Select options={\r\n                            this.props.taskTable.map(key => ({ text: key.name, value: key.name }))\r\n                        } required label='Select a task' onChange={this.handleSelectTask} />\r\n                        <Form.Button secondary style={{\r\n                            marginTop: '22px'\r\n                        }} onClick={this.handleSubmit}>Submit</Form.Button>\r\n                    </Form.Group>\r\n                </Form>\r\n                <div>{this.renderDone()}</div>\r\n            </Tab.Pane>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        taskTable: state.active.taskTable,\r\n        userTable: state.active.userTable\r\n    }),\r\n    { fetchTaskTable, fetchUserTable, setTask }\r\n)(SetTask);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchTaskTable, fetchUserTable } from '../store/actions/';\nimport { Tab, Form, List } from 'semantic-ui-react';\n\nclass SetTask extends Component {\n  handleSelectTask = (e, { value }) => this.setState({ user: value });\n  componentDidMount() {\n    this.props.fetchTaskTable();\n    this.props.fetchUserTable();\n  }\n  renderTask = () => {\n    if (this.state)\n      return (\n        <List divided relaxed style={{ padding: '20px' }} >\n          {this.props.taskTable.find(el => el.name === this.state.user).users.map((el, id) => (\n            <List.Item key={id}>\n              <List.Icon name='wheelchair' size='large' verticalAlign='middle' />\n              <List.Content>\n                <List.Header>{el}</List.Header>\n              </List.Content>\n            </List.Item>\n          ))}\n        </ List>\n      )\n  }\n  render() {\n    return (\n      <Tab.Pane>\n\n        <Form unstackable>\n          <Form.Group style={{\n            display: 'flex',\n            alignItems: 'center',\n            padding: '20px'\n          }} widths={2}>\n            <Form.Select options={\n              this.props.taskTable\n                .map(key => ({ value: key.name, text: key.name, key: key.id }))\n            } required label='Select a task' onChange={this.handleSelectTask} />\n          </Form.Group>\n        </Form>\n        <div>{this.renderTask()}</div>\n      </Tab.Pane>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    userTable: state.active.userTable,\n    taskTable: state.active.taskTable\n  }),\n  { fetchTaskTable, fetchUserTable }\n)(SetTask);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport AddTask from './AddTask';\r\nimport SetTaskState from './SetTaskState';\r\nimport SetTask from './SetTask';\r\nimport CheckTask from './CheckTask';\r\nimport { Tab } from 'semantic-ui-react';\r\n\r\nclass TaskMng extends Component {\r\n\tstate = {\r\n\t\tpanes: [\r\n\t\t\t{ menuItem: 'Add new task to database', render: () => <AddTask /> },\r\n\t\t\t{ menuItem: 'Set task state', render: () => <SetTaskState /> },\r\n\t\t\t{ menuItem: 'Check executors', render: () => <CheckTask /> },\r\n\t\t\t{ menuItem: 'Apply task to a user', render: () => <SetTask /> }\r\n\t\t]\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Tab panes={this.state.panes} />\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default connect(\r\n\tnull,\r\n\tnull\r\n)(TaskMng);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Table, Input } from 'semantic-ui-react';\r\nimport { fetchStateTable } from '../store/actions/'\r\n\r\nclass StateTable extends Component {\r\n    state = {\r\n        str: ''\r\n    }\r\n    componentWillMount() {\r\n        this.props.fetchStateTable();\r\n    }\r\n    handleChange = (e, { value }) => {\r\n        this.setState({ str: value });\r\n    }\r\n    render() {\r\n        let tmp = this.props.stateTable;\r\n        if (this.state.str) tmp = this.props.stateTable.filter(el => el.name.toLowerCase().indexOf(this.state.str.toLowerCase()) > -1);\r\n        return ( <div>\r\n            <Input fluid onChange={this.handleChange} label='Enter task name'></Input> \r\n            <Table celled structured>\r\n                <Table.Header>\r\n                    <Table.Row>\r\n                        <Table.HeaderCell>Id</Table.HeaderCell>\r\n                        <Table.HeaderCell>Name</Table.HeaderCell>\r\n                        <Table.HeaderCell>Users</Table.HeaderCell>\r\n                        <Table.HeaderCell>State</Table.HeaderCell>\r\n                        <Table.HeaderCell>Action</Table.HeaderCell>\r\n                        <Table.HeaderCell>Managed</Table.HeaderCell>\r\n                        <Table.HeaderCell>Creation date</Table.HeaderCell>\r\n                    </Table.Row>\r\n                </Table.Header>\r\n                <Table.Body>\r\n                    {tmp.map(key =>\r\n                            <Table.Row key={key.id}>\r\n                                <Table.Cell>{key.id}</Table.Cell>\r\n                                <Table.Cell>{key.name}</Table.Cell>\r\n                                <Table.Cell>\r\n                                <Table>\r\n                                    <Table.Body>\r\n                                        <Table.Row>{key.users ?\r\n                                            key.users.map((el, id) => <Table.Cell key={id + 1001 * key.id}>{el}</Table.Cell>) :\r\n                                            <div></div>}\r\n                                        </Table.Row>\r\n                                    </Table.Body>\r\n                                </Table>\r\n                                </Table.Cell>\r\n                                <Table.Cell>{key.state}</Table.Cell>\r\n                                <Table.Cell>{key.action}</Table.Cell>\r\n                                <Table.Cell>{key.managed}</Table.Cell>\r\n                                <Table.Cell>{key.createdAt}</Table.Cell>\r\n                            </Table.Row>\r\n                        )\r\n                    }\r\n                </Table.Body>\r\n            </Table>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({\r\n        stateTable: state.active.stateTable\r\n    }),\r\n    { fetchStateTable }\r\n)(StateTable);","import React, { Component } from 'react';\nimport Navbar from './components/Navbar';\nimport Login from './components/Login';\nimport UserTable from './components/UserTable';\nimport UserMng from './components/UserMng';\nimport TaskTable from './components/TaskTable';\nimport TaskMng from './components/TaskMng';\nimport StateTable from './components/StateTable';\nimport { connect } from 'react-redux';\nimport { Header, Icon } from 'semantic-ui-react';\nimport 'semantic-ui-css/semantic.min.css';\n\nclass App extends Component {\n\trenderBody() {\n\t\tconst { activeItem, logged } = this.props;\n\t\tif (!logged) return (<Login />);\n\t\telse {\n\t\t\tswitch (activeItem) {\n\t\t\t\tcase 'User Table': return (<UserTable />);\n\t\t\t\tcase 'State Table': return (<StateTable />);\n\t\t\t\tcase 'Task Table': return (<TaskTable />);\n\t\t\t\tcase 'User Management': return (<UserMng />);\n\t\t\t\tcase 'Task Management': return (<TaskMng />);\n\t\t\t\tdefault: return (\n\t\t\t\t\t<Header as='h2' style={{\n\t\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\t\tmarginTop: '20%'\n\t\t\t\t\t}}>\n\t\t\t\t\t\t<Icon name='settings' />\n\t\t\t\t\t\t<Header.Content>\n\t\t\t\t\t\t\tCongratulations with successful authentication\n\t\t\t\t\t\t\t<Header.Subheader>Now you can choose operations to perform</Header.Subheader>\n\t\t\t\t\t\t</Header.Content>\n\t\t\t\t\t</Header>\n\t\t\t\t);\n\t\t\t}\n\n\t\t}\n\t}\n  \trender() {\n\t\treturn (\n\t\t\t<div className=\"body\">\n\t\t\t\t<Navbar />\n\t\t\t\t<div className='main'>{this.renderBody()}</div>\n\t\t\t</div>\n\t\t);\n  \t}\n}\n\nexport default connect(\n\tstate => ({\n\t\tactiveItem: state.active.activeItem,\n\t\tlogged: state.active.logged\n\t}),\n\tnull\n)(App);","import { DELETE_EXEC, CHANGE_ACTIVE_ITEM, LOG_IN, FETCH_USER_TABLE, FETCH_STATE_TABLE, FETCH_TASK_TABLE, DELETE_USER } from '../actions/types';\r\n\r\nconst initialState = {\r\n    activeItem: '',\r\n    logged: false,\r\n    userTable: [],\r\n    stateTable: [],\r\n    taskTable: [],\r\n    msg: ''\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case CHANGE_ACTIVE_ITEM:\r\n            return {\r\n                ...state,\r\n                activeItem: action.payload\r\n            };\r\n        case LOG_IN:\r\n            return {\r\n                ...state,\r\n                logged: true\r\n            };\r\n        case FETCH_STATE_TABLE:\r\n            return {\r\n                ...state,\r\n                stateTable: action.payload\r\n            }\r\n        case FETCH_USER_TABLE:\r\n            return {\r\n                ...state,\r\n                userTable: action.payload\r\n            };\r\n        case FETCH_TASK_TABLE:\r\n            return {\r\n                ...state,\r\n                taskTable: action.payload\r\n            };\r\n        case DELETE_USER:\r\n            return {\r\n                ...state,\r\n                msg: action.payload\r\n            };\r\n        case DELETE_EXEC:\r\n            return {\r\n                ...state,\r\n                msg: action.payload\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport active from './active';\r\n\r\nexport default combineReducers({\r\n\tactive\r\n});","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.js';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducer from './store/reducers';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nconst run = () => {\n\tReactDOM.render(\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>, \n\t\tdocument.getElementById('root')\n\t);\n};\n\nstore.subscribe(run);\n\nrun();\nserviceWorker.unregister();"],"sourceRoot":""}